FROM mcr.microsoft.com/windows/servercore:ltsc2022

# Set up Python environment
SHELL ["powershell", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"]

# Install Python
RUN Invoke-WebRequest -Uri "https://www.python.org/ftp/python/3.11.8/python-3.11.8-amd64.exe" -OutFile "python-3.11.8.exe" ; \
    Start-Process python-3.11.8.exe -ArgumentList '/quiet InstallAllUsers=1 PrependPath=1' -Wait ; \
    Remove-Item python-3.11.8.exe

# Verify Python installation
RUN python --version; python -m pip --version

# Install dependencies
COPY src/backend/requirements.txt ./requirements.txt

# Create a filtered requirements file without fictitious packages
RUN powershell -Command "Get-Content requirements.txt | Where-Object { -not ($_ -match 'fictitious package' -or $_ -match 'pyvismx' -or $_ -match 'ollama-python') } | Set-Content requirements.filtered.txt"

# Install dependencies - Broken into separate RUN commands for Windows
RUN python -m pip install --upgrade pip setuptools==59.6.0 wheel
RUN python -m pip install --no-cache-dir -r requirements.filtered.txt
RUN python -m pip install fastapi uvicorn pywin32 python-multipart aiofiles

# Create app directory and required structure
WORKDIR /app
RUN mkdir -p src/backend

# Copy required files
COPY run_visio_service.py .
COPY src/backend/visio_service.py ./src/backend/visio_service.py

# Expose port
EXPOSE 8051

# Set environment variables
ENV VISIO_SERVICE_PORT=8051
ENV VISIO_SERVICE_HOST=0.0.0.0
ENV PYTHONUNBUFFERED=1

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD powershell -Command "try { Invoke-WebRequest http://localhost:8051/health -UseBasicParsing | Out-Null; exit 0 } catch { exit 1 }"

# Run service
CMD ["python", "run_visio_service.py"] 